\SYNBOL{}\SYN[Statement]{do} \{\SYNEOL{}
\SYNBOL{}    \SYN[Define]{let} \SYN[swiftParenthesisRegion]{(data, _)} \SYN[Function]{=} \SYN[Statement]{try} await URLSession.shared.data\SYN[swiftParenthesisRegion]{(from}\SYN[Delimiter]{:}\SYN[swiftParenthesisRegion]{ }\SYN[Type]{url!}\SYN[swiftParenthesisRegion]{)}\SYNEOL{}
\SYNBOL{}    \SYN[Statement]{if} \SYN[Define]{let} \SYN[Identifier]{response} \SYN[Function]{=} \SYN[Statement]{try}? JSONDecoder\SYN[swiftParenthesisRegion]{()}\SYNEOL{}
\SYNBOL{}    \tab{4}.decode\SYN[swiftParenthesisRegion]{(Model.}\SYN[Identifier]{self}\SYN[swiftParenthesisRegion]{, from}\SYN[Delimiter]{:}\SYN[swiftParenthesisRegion]{ }\SYN[Type]{data}\SYN[swiftParenthesisRegion]{)} \{\SYNEOL{}
\SYNBOL{}        \tab{4}\tab{4}result \SYN[Function]{=} response.\SYN[Identifier]{self}\SYNEOL{}
\SYNBOL{}    \}\SYNEOL{}
\SYNBOL{}\} \SYN[Statement]{catch} \{\SYNEOL{}
\SYNBOL{}    print\SYN[swiftParenthesisRegion]{(}\SYN[String]{"Invalid."}\SYN[swiftParenthesisRegion]{)}\SYNEOL{}
\SYNBOL{}\}\SYNEOL{}
